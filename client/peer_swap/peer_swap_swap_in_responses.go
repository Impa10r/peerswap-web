// Code generated by go-swagger; DO NOT EDIT.

package peer_swap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"peerswap-web/models"
)

// PeerSwapSwapInReader is a Reader for the PeerSwapSwapIn structure.
type PeerSwapSwapInReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PeerSwapSwapInReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPeerSwapSwapInOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPeerSwapSwapInDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPeerSwapSwapInOK creates a PeerSwapSwapInOK with default headers values
func NewPeerSwapSwapInOK() *PeerSwapSwapInOK {
	return &PeerSwapSwapInOK{}
}

/*
PeerSwapSwapInOK describes a response with status code 200, with default header values.

A successful response.
*/
type PeerSwapSwapInOK struct {
	Payload *models.PeerswapSwapResponse
}

// IsSuccess returns true when this peer swap swap in o k response has a 2xx status code
func (o *PeerSwapSwapInOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this peer swap swap in o k response has a 3xx status code
func (o *PeerSwapSwapInOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this peer swap swap in o k response has a 4xx status code
func (o *PeerSwapSwapInOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this peer swap swap in o k response has a 5xx status code
func (o *PeerSwapSwapInOK) IsServerError() bool {
	return false
}

// IsCode returns true when this peer swap swap in o k response a status code equal to that given
func (o *PeerSwapSwapInOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the peer swap swap in o k response
func (o *PeerSwapSwapInOK) Code() int {
	return 200
}

func (o *PeerSwapSwapInOK) Error() string {
	return fmt.Sprintf("[POST /v1/swaps/swapin][%d] peerSwapSwapInOK  %+v", 200, o.Payload)
}

func (o *PeerSwapSwapInOK) String() string {
	return fmt.Sprintf("[POST /v1/swaps/swapin][%d] peerSwapSwapInOK  %+v", 200, o.Payload)
}

func (o *PeerSwapSwapInOK) GetPayload() *models.PeerswapSwapResponse {
	return o.Payload
}

func (o *PeerSwapSwapInOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PeerswapSwapResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPeerSwapSwapInDefault creates a PeerSwapSwapInDefault with default headers values
func NewPeerSwapSwapInDefault(code int) *PeerSwapSwapInDefault {
	return &PeerSwapSwapInDefault{
		_statusCode: code,
	}
}

/*
PeerSwapSwapInDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PeerSwapSwapInDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this peer swap swap in default response has a 2xx status code
func (o *PeerSwapSwapInDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this peer swap swap in default response has a 3xx status code
func (o *PeerSwapSwapInDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this peer swap swap in default response has a 4xx status code
func (o *PeerSwapSwapInDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this peer swap swap in default response has a 5xx status code
func (o *PeerSwapSwapInDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this peer swap swap in default response a status code equal to that given
func (o *PeerSwapSwapInDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the peer swap swap in default response
func (o *PeerSwapSwapInDefault) Code() int {
	return o._statusCode
}

func (o *PeerSwapSwapInDefault) Error() string {
	return fmt.Sprintf("[POST /v1/swaps/swapin][%d] PeerSwap_SwapIn default  %+v", o._statusCode, o.Payload)
}

func (o *PeerSwapSwapInDefault) String() string {
	return fmt.Sprintf("[POST /v1/swaps/swapin][%d] PeerSwap_SwapIn default  %+v", o._statusCode, o.Payload)
}

func (o *PeerSwapSwapInDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *PeerSwapSwapInDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
