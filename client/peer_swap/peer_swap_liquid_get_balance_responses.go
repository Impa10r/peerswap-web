// Code generated by go-swagger; DO NOT EDIT.

package peer_swap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"peerswap-web/models"
)

// PeerSwapLiquidGetBalanceReader is a Reader for the PeerSwapLiquidGetBalance structure.
type PeerSwapLiquidGetBalanceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PeerSwapLiquidGetBalanceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPeerSwapLiquidGetBalanceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPeerSwapLiquidGetBalanceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPeerSwapLiquidGetBalanceOK creates a PeerSwapLiquidGetBalanceOK with default headers values
func NewPeerSwapLiquidGetBalanceOK() *PeerSwapLiquidGetBalanceOK {
	return &PeerSwapLiquidGetBalanceOK{}
}

/*
PeerSwapLiquidGetBalanceOK describes a response with status code 200, with default header values.

A successful response.
*/
type PeerSwapLiquidGetBalanceOK struct {
	Payload *models.PeerswapGetBalanceResponse
}

// IsSuccess returns true when this peer swap liquid get balance o k response has a 2xx status code
func (o *PeerSwapLiquidGetBalanceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this peer swap liquid get balance o k response has a 3xx status code
func (o *PeerSwapLiquidGetBalanceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this peer swap liquid get balance o k response has a 4xx status code
func (o *PeerSwapLiquidGetBalanceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this peer swap liquid get balance o k response has a 5xx status code
func (o *PeerSwapLiquidGetBalanceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this peer swap liquid get balance o k response a status code equal to that given
func (o *PeerSwapLiquidGetBalanceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the peer swap liquid get balance o k response
func (o *PeerSwapLiquidGetBalanceOK) Code() int {
	return 200
}

func (o *PeerSwapLiquidGetBalanceOK) Error() string {
	return fmt.Sprintf("[GET /v1/liquid/balance][%d] peerSwapLiquidGetBalanceOK  %+v", 200, o.Payload)
}

func (o *PeerSwapLiquidGetBalanceOK) String() string {
	return fmt.Sprintf("[GET /v1/liquid/balance][%d] peerSwapLiquidGetBalanceOK  %+v", 200, o.Payload)
}

func (o *PeerSwapLiquidGetBalanceOK) GetPayload() *models.PeerswapGetBalanceResponse {
	return o.Payload
}

func (o *PeerSwapLiquidGetBalanceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PeerswapGetBalanceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPeerSwapLiquidGetBalanceDefault creates a PeerSwapLiquidGetBalanceDefault with default headers values
func NewPeerSwapLiquidGetBalanceDefault(code int) *PeerSwapLiquidGetBalanceDefault {
	return &PeerSwapLiquidGetBalanceDefault{
		_statusCode: code,
	}
}

/*
PeerSwapLiquidGetBalanceDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PeerSwapLiquidGetBalanceDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this peer swap liquid get balance default response has a 2xx status code
func (o *PeerSwapLiquidGetBalanceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this peer swap liquid get balance default response has a 3xx status code
func (o *PeerSwapLiquidGetBalanceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this peer swap liquid get balance default response has a 4xx status code
func (o *PeerSwapLiquidGetBalanceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this peer swap liquid get balance default response has a 5xx status code
func (o *PeerSwapLiquidGetBalanceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this peer swap liquid get balance default response a status code equal to that given
func (o *PeerSwapLiquidGetBalanceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the peer swap liquid get balance default response
func (o *PeerSwapLiquidGetBalanceDefault) Code() int {
	return o._statusCode
}

func (o *PeerSwapLiquidGetBalanceDefault) Error() string {
	return fmt.Sprintf("[GET /v1/liquid/balance][%d] PeerSwap_LiquidGetBalance default  %+v", o._statusCode, o.Payload)
}

func (o *PeerSwapLiquidGetBalanceDefault) String() string {
	return fmt.Sprintf("[GET /v1/liquid/balance][%d] PeerSwap_LiquidGetBalance default  %+v", o._statusCode, o.Payload)
}

func (o *PeerSwapLiquidGetBalanceDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *PeerSwapLiquidGetBalanceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
