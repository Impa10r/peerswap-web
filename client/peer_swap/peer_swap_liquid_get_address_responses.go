// Code generated by go-swagger; DO NOT EDIT.

package peer_swap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"peerswap-web/models"
)

// PeerSwapLiquidGetAddressReader is a Reader for the PeerSwapLiquidGetAddress structure.
type PeerSwapLiquidGetAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PeerSwapLiquidGetAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPeerSwapLiquidGetAddressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPeerSwapLiquidGetAddressDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPeerSwapLiquidGetAddressOK creates a PeerSwapLiquidGetAddressOK with default headers values
func NewPeerSwapLiquidGetAddressOK() *PeerSwapLiquidGetAddressOK {
	return &PeerSwapLiquidGetAddressOK{}
}

/*
PeerSwapLiquidGetAddressOK describes a response with status code 200, with default header values.

A successful response.
*/
type PeerSwapLiquidGetAddressOK struct {
	Payload *models.PeerswapGetAddressResponse
}

// IsSuccess returns true when this peer swap liquid get address o k response has a 2xx status code
func (o *PeerSwapLiquidGetAddressOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this peer swap liquid get address o k response has a 3xx status code
func (o *PeerSwapLiquidGetAddressOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this peer swap liquid get address o k response has a 4xx status code
func (o *PeerSwapLiquidGetAddressOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this peer swap liquid get address o k response has a 5xx status code
func (o *PeerSwapLiquidGetAddressOK) IsServerError() bool {
	return false
}

// IsCode returns true when this peer swap liquid get address o k response a status code equal to that given
func (o *PeerSwapLiquidGetAddressOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the peer swap liquid get address o k response
func (o *PeerSwapLiquidGetAddressOK) Code() int {
	return 200
}

func (o *PeerSwapLiquidGetAddressOK) Error() string {
	return fmt.Sprintf("[GET /v1/liquid/address][%d] peerSwapLiquidGetAddressOK  %+v", 200, o.Payload)
}

func (o *PeerSwapLiquidGetAddressOK) String() string {
	return fmt.Sprintf("[GET /v1/liquid/address][%d] peerSwapLiquidGetAddressOK  %+v", 200, o.Payload)
}

func (o *PeerSwapLiquidGetAddressOK) GetPayload() *models.PeerswapGetAddressResponse {
	return o.Payload
}

func (o *PeerSwapLiquidGetAddressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PeerswapGetAddressResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPeerSwapLiquidGetAddressDefault creates a PeerSwapLiquidGetAddressDefault with default headers values
func NewPeerSwapLiquidGetAddressDefault(code int) *PeerSwapLiquidGetAddressDefault {
	return &PeerSwapLiquidGetAddressDefault{
		_statusCode: code,
	}
}

/*
PeerSwapLiquidGetAddressDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type PeerSwapLiquidGetAddressDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this peer swap liquid get address default response has a 2xx status code
func (o *PeerSwapLiquidGetAddressDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this peer swap liquid get address default response has a 3xx status code
func (o *PeerSwapLiquidGetAddressDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this peer swap liquid get address default response has a 4xx status code
func (o *PeerSwapLiquidGetAddressDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this peer swap liquid get address default response has a 5xx status code
func (o *PeerSwapLiquidGetAddressDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this peer swap liquid get address default response a status code equal to that given
func (o *PeerSwapLiquidGetAddressDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the peer swap liquid get address default response
func (o *PeerSwapLiquidGetAddressDefault) Code() int {
	return o._statusCode
}

func (o *PeerSwapLiquidGetAddressDefault) Error() string {
	return fmt.Sprintf("[GET /v1/liquid/address][%d] PeerSwap_LiquidGetAddress default  %+v", o._statusCode, o.Payload)
}

func (o *PeerSwapLiquidGetAddressDefault) String() string {
	return fmt.Sprintf("[GET /v1/liquid/address][%d] PeerSwap_LiquidGetAddress default  %+v", o._statusCode, o.Payload)
}

func (o *PeerSwapLiquidGetAddressDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *PeerSwapLiquidGetAddressDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
