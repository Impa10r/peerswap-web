{{define "header"}}
    <!DOCTYPE html>
    <html lang="en-US">
    <head>
    <meta charset="utf-8">
    <meta name="HandheldFriendly" content="True">
    <meta name="MobileOptimized" content="320">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PeerSwap</title>
    <link rel=apple-touch-icon sizes=180x180 href="/static/apple-touch-icon.png">
    <link rel=icon type=image/png sizes=32x32 href="/static/favicon-32x32.png">
    <link rel=icon type=image/png sizes=16x16 href="/static/favicon-16x16.png">
    <link rel=icon href="/static/favicon.ico">
    <link rel="stylesheet" href="/static/bulma-{{.ColorScheme}}.min.css">
    <link rel="stylesheet" href="/static/styles.css">
    </head>
    <body>
        <header>
            <div class="logo-container">
                <div class="left-logo">
                    <a title="Navigate to starting page" href="/"><img class="logo" src="/static/peerswap_logo.png" alt="PEERSWAP"></a>
                </div>
                <div class="right-logo">
                    <div class="dropdown is-right">
                        <div class="dropdown-trigger">
                            <button class="menu-button" aria-haspopup="true" aria-controls="dropdown-menu">
                                <span id="mempoolFeeRate" style="margin-right: 1em">{{.MempoolFeeRate}} sat/vB</span>
                                <span class="icon">☰</span>
                            </button>
                        </div>
                        <div class="dropdown-menu" id="dropdown-menu" role="menu">
                            <div class="dropdown-content">
                                <a href="/" class="dropdown-item"> Peer List </a>
                                <a href="/bitcoin" class="dropdown-item"> Bitcoin Wallet </a>
                                <a href="/liquid" class="dropdown-item"> Liquid Wallet </a>
                                <a href="/af" class="dropdown-item"> Lightning Auto Fees </a>
                                <hr class="dropdown-divider" />
                                <a href="/config" class="dropdown-item"> Configuration </a>
                                <a href="/log?log=psweb.log" class="dropdown-item"> Logs </a>
                                {{if .Authenticated}}
                                    <hr class="dropdown-divider" />
                                    <a href="/logout" class="dropdown-item"> Logout </a>   
                                {{end}}
                                <a href="https://swapmarket.github.io" target="_blank" class="dropdown-item"> Swap Market ↗︎ </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="message-container">
                <div id="temp-message" class="hidden"></div>
                <div id="error-message" class="hidden"></div>
            </div>
            <script>
                function displayQR(id) {
                    var text = document.getElementById(id).value;
                    var container = document.getElementById("qrcode-container");
                    var qrcode = new QRCode(document.getElementById("qrcode"), {
                        text: text,
                        width: container.clientWidth,  // Set QR code width to the container's width
                        height: container.clientWidth   // Set QR code height to the container's width
                    });

                    // Update QR code size on window resize
                    window.addEventListener("resize", function() {
                        document.getElementById("qrcode").innerHTML = ""; // Clear the previous QR code
                        qrcode = new QRCode(document.getElementById("qrcode"), {
                            text: text,
                            width: container.clientWidth,
                            height: container.clientWidth
                        });
                    });
                }
                
                function copyToClipboard(elementId) {
                    var element = document.getElementById(elementId);

                    if (!element) {
                        console.error("Element not found:", elementId);
                        return;
                    }

                    var textToCopy = "";

                    // If the element is an <a> tag, get its href
                    if (element.tagName === "A") {
                        textToCopy = element.href;
                    } 
                    // If it's an input or textarea, get its value
                    else if (element.tagName === "INPUT" || element.tagName === "TEXTAREA") {
                        textToCopy = element.value;
                    } 
                    // Otherwise, get the inner text
                    else {
                        textToCopy = element.innerText;
                    }

                    // Copy the text to clipboard
                    var tempTextArea = document.createElement("textarea");
                    tempTextArea.value = textToCopy;
                    document.body.appendChild(tempTextArea);
                    tempTextArea.select();
                    document.execCommand("copy");
                    document.body.removeChild(tempTextArea);

                    // Alert the user that the text has been copied
                    displayTemporaryMessage("Copied to clipboard");
                }
                
                function displayTemporaryMessage(msg) {
                    var messageContainer = document.getElementById("message-container");
                    var tempMessage = document.getElementById("temp-message");
                    
                    tempMessage.innerHTML = msg;
                    tempMessage.classList.remove("hidden");

                    setTimeout(function() {
                        tempMessage.classList.add("hidden");
                    }, 5000); // 5 seconds
                }
                {{if ne .PopUpMessage ""}}
                    displayTemporaryMessage("{{.PopUpMessage}}");
                {{end}}

                function displayErrorMessage(msg) {
                    var messageContainer = document.getElementById("message-container");
                    var tempMessage = document.getElementById("error-message");
                    
                    tempMessage.innerHTML = msg;
                    tempMessage.classList.remove("hidden");

                    setTimeout(function() {
                        tempMessage.classList.add("hidden");
                    }, 5000); // 5 seconds
                }
                {{if ne .ErrorMessage ""}}
                    {{if ne .ErrorMessage "welcome"}}
                        displayErrorMessage("{{.ErrorMessage}}");
                    {{end}}
                {{end}}
                var dropdown = document.querySelector('.dropdown');
                dropdown.addEventListener('click', function(event) {
                event.stopPropagation();
                dropdown.classList.toggle('is-active');
                });

                // Close the dropdown if the user clicks outside of it
                window.onclick = function(event) {
                    if (!event.target.matches('.dropdown-content')) {
                        var dropdown = document.querySelector('.dropdown');
                        dropdown.classList.remove('is-active');
                    }
                }
            </script>  
            <script src="/static/js/moment.min.js"></script>
            <script src="/static/js/chart.js"></script>
            <script src="/static/js/chartjs-adapter-moment.js"></script>
            <script src="/static/js/qrcode.min.js"></script>
        </head>
        </header>
        <section class="section">
            {{if eq .ErrorMessage "welcome"}}
                <div class="container">
                    <div class="columns">
                        <div class="column">
                            <div class="box">
                                <h4 class="title is-4">Welcome to PeerSwap!</h4>
                                <center>
                                <br>
                                <p>Please copy-paste your Elements Core Username and Password into the configuration fields below.</p>
                                <br>
                                <img src="/static/elements.png" alt="Elements Core">
                                </center>
                            </div>
                        </div>
                    </div>
                </div>
            {{end}}
{{end}}

{{define "footer"}}
            <br>
            <table style="table-layout:fixed; width: 100%">
                <tr>
                    <td style="width: 100px;">
                        <div class="content has-text-centered">
                            <p>
                                <strong>PeerSwap Web UI by <a href="https://github.com/Impa10r/peerswap-web" target="_blank">Impalor</a></strong>
                            </p>
                        </div>
                    </td>
                </tr>
            </table>
        </section>  
    </body>
    </html>
{{end}}

{{define "log"}}
    <table style="table-layout:fixed; width: 100%; border-collapse: collapse;">
        <tr>
            <td style="max-width: 100%; overflow: hidden; padding: 0">
            <pre {{if eq .LogPosition 0}}style="height:300px;"{{end}}id="log-content"></pre>
            </td>
        </tr>
    </table>
    <label class="checkbox is-large">
        &nbsp&nbsp<input type="checkbox" id="scroll" checked>
        &nbsp&nbspAuto Scroll
    </label>
    <script>
        const logContent = document.getElementById('log-content');
        let logPosition = {{.LogPosition}};             
        
        function updatePage(data) {
            if (document.getElementById('scroll').checked && data.NextPosition > logPosition) {
                logPosition = data.NextPosition;
                logContent.textContent += data.LogText;
                logContent.scrollTop = logContent.scrollHeight;    
            
                {{if eq .LogPosition 0}}
                    // Wait until peerswapd is initialized
                    if (data.LogText.includes("{{.SearchText}}")) {
                        // Redirect to home page
                        window.location.href = '/'; 
                    }      
                {{end}}     
            }      
        }
        
        function fetchData() {
            fetch('/logapi?pos=' + logPosition + '&log={{.LogFile}}')
            .then(response => response.json())
            .then(data => updatePage(data));
        }
        
        const timer2 = setInterval(fetchData, 1000);
        fetchData();
    </script>
{{end}}

{{define "bitcoin_icon"}}
    <span style="color: #FF9900; font-weight: bold;">₿</span>
{{end}}