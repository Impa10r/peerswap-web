// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PeerswapPolicy peerswap policy
//
// swagger:model peerswapPolicy
type PeerswapPolicy struct {

	// accept all peers
	AcceptAllPeers bool `json:"acceptAllPeers,omitempty"`

	// allow new swaps
	AllowNewSwaps bool `json:"allowNewSwaps,omitempty"`

	// allowlisted peers
	AllowlistedPeers []string `json:"allowlistedPeers"`

	// min swap amount msat
	MinSwapAmountMsat string `json:"minSwapAmountMsat,omitempty"`

	// reserve onchain msat
	ReserveOnchainMsat string `json:"reserveOnchainMsat,omitempty"`

	// suspicious peer list
	SuspiciousPeerList []string `json:"suspiciousPeerList"`
}

// Validate validates this peerswap policy
func (m *PeerswapPolicy) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this peerswap policy based on context it is used
func (m *PeerswapPolicy) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PeerswapPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PeerswapPolicy) UnmarshalBinary(b []byte) error {
	var res PeerswapPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
